import 'package:flutter/material.dart';
import 'theme/app_theme.dart';
import 'screens/welcome_screen.dart';
import 'screens/onboarding_screen.dart';
import 'localization/app_localizations.dart';
import 'package:firebase_core/firebase_core.dart';
// import 'firebase_options.dart'; // Would be generated by FlutterFire CLI
import 'package:hive_flutter/hive_flutter.dart';
import 'package:path_provider/path_provider.dart';
import 'dart:io'; // For Directory

void main() async { // Make main async
  WidgetsFlutterBinding.ensureInitialized(); // Ensure bindings are initialized

  // Initialize Firebase
  // TODO: Configure this with `flutterfire configure` to generate firebase_options.dart
  // For now, using a basic initialization. This might require platform-specific setup.
  try {
    await Firebase.initializeApp(
      // options: DefaultFirebaseOptions.currentPlatform, // This line uses the generated file
    );
  } catch (e) {
    // TODO: Handle Firebase initialization error (e.g., log, show error to user)
    print('Failed to initialize Firebase: $e');
  }

  // Initialize Hive
  try {
    final appDocumentDir = await getApplicationDocumentsDirectory();
    final hivePath = Directory('${appDocumentDir.path}/dataplug_hive');
    await Hive.initFlutter(hivePath.path);
    // TODO: Register Hive adapters here if any (e.g., for Sharer model)
    // Example: Hive.registerAdapter(SharerAdapter());
    // TODO: Open Hive boxes here if needed at startup
    // Example: await Hive.openBox<Sharer>('sharers');
  } catch (e) {
    // TODO: Handle Hive initialization error
    print('Failed to initialize Hive: $e');
  }

  runApp(const DataPlugApp());
}

class DataPlugApp extends StatefulWidget {
  const DataPlugApp({super.key});

  @override
  State<DataPlugApp> createState() => _DataPlugAppState();
}

class _DataPlugAppState extends State<DataPlugApp> {
  bool _showOnboarding = true;

  void _completeOnboarding() {
    setState(() => _showOnboarding = false);
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'DataPlug',
      theme: AppTheme.lightTheme,
      darkTheme: AppTheme.darkTheme,
      localizationsDelegates: AppLocalizations.localizationsDelegates,
      supportedLocales: AppLocalizations.supportedLocales,
      home: _showOnboarding
          ? OnboardingScreen(onGetStarted: _completeOnboarding)
          : WelcomeScreen(),
      debugShowCheckedModeBanner: false,
    );
  }
}
